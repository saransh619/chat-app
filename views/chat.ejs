<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat App</title>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f2f2f2;
    }

    #chat-container {
      max-width: 600px;
      margin: 20px auto;
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    #messages {
      list-style-type: none;
      padding: 0;
      margin: 0;
      overflow-y: auto;
      max-height: 300px;
      border-bottom: 1px solid #ccc;
    }

    #messageInput {
      width: 60%;
      padding: 8px;
      margin-right: 5px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    #fileInput {
      width: 30%;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
      cursor: pointer;
    }

    #sendButton {
      width: 10%;
      padding: 8px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    #sendButton:hover {
      background-color: #45a049;
    }

    #fileList {
      margin-top: 10px;
      overflow: hidden;
    }

    #fileList img {
      max-width: 50px;
      max-height: 50px;
      margin: 5px;
    }
  </style>
</head>
<body>

<div id="chat-container">
  <ul id="messages"></ul>
  <div>
    <input type="text" id="messageInput" placeholder="Type a message">
    <input type="file" id="fileInput" multiple>
    <button onclick="sendMessage()" id="sendButton">Send</button>
  </div>
  <div id="fileList"></div>
</div>

<form method="get" action="/api/auth/logout">
  <button type="submit">Logout</button>
</form>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.js"></script>
<script>
  const socket = io(); // Connect to the Socket.IO server

  // Listen for 'newMessage' events from the server
  socket.on('newMessage', (data) => {
    const messagesList = document.getElementById('messages');
    const li = document.createElement('li');
    li.textContent = `${data.message.sender_id}: ${data.message.message}`;
    messagesList.appendChild(li);

    updateFileList(data.message.file_upload);
  });

  // Function to send a message to the server
  function sendMessage() {
    const messageInput = document.getElementById('messageInput');
    const fileInput = document.getElementById('fileInput');
    const message = messageInput.value;

    // Emit 'newMessage' event to the server
    socket.emit('newMessage', { text: message, files: fileInput.files });

    messageInput.value = '';
    fileInput.value = '';
  }

  // Update the file list in the UI
  function updateFileList(files) {
    const fileList = document.getElementById('fileList');
    fileList.innerHTML = ''; // Clear existing files

    files.forEach((file) => {
      const img = document.createElement('img');
      img.src = `/uploads/${file}`;
      fileList.appendChild(img);
    });
  }
</script>

</body>
</html>